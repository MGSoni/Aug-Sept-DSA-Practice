public class Solution {

  private int[] dp;
  private int N;
  private String A;

  public int numDecodings(String A) {

    N = A.length();

    if (A == null)
      return 0;

    dp = new int[N];
    Arrays.fill(dp, -1);
    this.A = A;

    return rec(N - 1);
  }

  private int rec(int index) {

    if (index < 0)
      return 1;

    if (dp[index] != -1)
      return dp[index] % 1000000007;

    int ways = 0;

    if (A.charAt(index) > '0') {
      ways = rec(index - 1);
      ways %= 1000000007;
    }

    if (isValidTwoDigits(index)) {
      ways += rec(index - 2);
      ways %= 1000000007;
    }

    return dp[index] = ways;
  }

  private boolean isValidTwoDigits(int index) {
    if (index > 0 && (A.charAt(index - 1) == '1' || A.charAt(index - 1) == '2' && A.charAt(index) < '7'))
      return true;

    return false;
  }

}
