public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public int isValidSudoku(final List<String> A) {


        if(A==null){
            return 0;
        }

        int n = A.size();
        if(n!=9 || A.get(0).length()!=9){
            return 0;
        }

        HashSet<Character> set = new HashSet<>();

        for(int i=0;i<n;i++){
            set.clear();
            for(int j=0;j<n;j++){
                char c = A.get(i).charAt(j);
                if(c!='.'){
                    if(set.contains(c)){
                        return 0;
                    }
                    set.add(c);
                }
                
            }
        }

        for(int i=0;i<n;i++){
            set.clear();
            for(int j=0;j<n;j++){
                char c = A.get(j).charAt(i);
                if(c!='.'){
                    if(set.contains(c)){
                        return 0;
                    }
                    set.add(c);
                }
            }
        }

        for(int k=0;k<n;k++){
            int x = k/3;
            int y = k%3;
            set.clear();
            for(int i=x*3;i<x*3+3;i++){
                for(int j=y*3;j<y*3+3;j++){
                     char c = A.get(j).charAt(i);
                    if(c!='.'){
                        if(set.contains(c)){
                            return 0;
                        }set.add(c);
                    }
                }
            }
        }
        return 1;
    }
}
